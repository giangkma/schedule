{"version":3,"sources":["image/avatar-default.png","AuthService/index.js","components/Schedule/index.js","components/Login/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AuthService","domain","login","studentAccount","studentPassword","urlencoded","URLSearchParams","append","axios","post","then","res","Promise","resolve","this","views","lessons","startTimeHours","startTimeMinutes","endTimeHours","endTimeMinutes","shift","Schedule","props","optionChanged","e","setState","currentDate","value","handleMenuClose","anchorEl","renderMenu","state","isMenuOpen","Boolean","Menu","className","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","logOut","history","push","localStorage","removeItem","handleProfileMenuOpen","currentTarget","data","Auth","getItem","getData","JSON","parse","newData","Object","keys","map","day","dayMiniSecond","YEAR","Date","getFullYear","MONTH","getMonth","DAY","getDate","item","subject","_class","address","split","lesson","index","text","startDate","endDate","sort","a","b","replace","Fragment","IconButton","edge","aria-label","aria-controls","aria-haspopup","color","src","avatar","alt","onOptionChanged","dataSource","adaptivityEnabled","defaultCurrentView","height","startDayHour","endDayHour","React","Component","withRouter","Login","onChangeInput","target","name","onShowPassword","showPassword","onSubmitFormLogin","trim","length","match","Swal","fire","upperCasestudentAccount","toUpperCase","encodeStudentPassword","md5","showLoadding","dataJson","status","showAlert","hideLoadding","setItem","stringify","mixin","toast","position","showConfirmButton","timer","timerProgressBar","onOpen","addEventListener","stopTimer","resumeTimer","icon","title","CircularProgress","TextField","type","label","variant","onChange","Button","App","path","component","exact","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.10e4a5da.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar-default.17b08a8e.png\";","import axios from \"axios\";\r\n\r\nexport default class AuthService {\r\n  constructor(domain) {\r\n    this.domain = domain || \"https://tkbkma.herokuapp.com/api/schedule/guest\";\r\n  }\r\n\r\n  login = (studentAccount, studentPassword) => {\r\n    const urlencoded = new URLSearchParams();\r\n    urlencoded.append(\"studentAccount\", studentAccount);\r\n    urlencoded.append(\"studentPassword\", studentPassword);\r\n    return axios.post(`${this.domain}`, urlencoded).then((res) => {\r\n      return Promise.resolve(res);\r\n    });\r\n  };\r\n}\r\n","import { IconButton } from \"@material-ui/core\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\r\nimport Scheduler from \"devextreme-react/scheduler\";\r\nimport React from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport avatar from \"../../image/avatar-default.png\";\r\nimport AuthService from \"../../AuthService\";\r\nimport \"./style.css\";\r\n\r\nconst views = [\"agenda\", \"month\", \"day\", \"week\"];\r\nconst lessons = [\"1,2,3\", \"1,2,3,4,5,6\", \"4,5,6\", \"7,8,9\", \"7,8,9,10,11,12\", \"10,11,12\", \"13,14,15,16\"];\r\nconst startTimeHours = [7, 7, 9, 12, 12, 15, 18];\r\nconst startTimeMinutes = [0, 0, 30, 35, 30, 5, 0];\r\nconst endTimeHours = [9, 12, 12, 14, 17, 17, 21, 17];\r\nconst endTimeMinutes = [25, 0, 0, 55, 30, 30, 15];\r\nconst shift = [\"1\", \"1-2\", \"2\", \"3\", \"3-4\", \"4\", \"5\"];\r\n\r\nclass Schedule extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            anchorEl: null,\r\n            studentAccount: null,\r\n        };\r\n        this.Auth = new AuthService();\r\n    }\r\n    componentDidMount() {\r\n        const { history } = this.props;\r\n        const studentAccount = localStorage.getItem(\"studentAccount\");\r\n        if (!studentAccount) {\r\n            history.replace(\"/schedule\");\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                studentAccount: studentAccount,\r\n            });\r\n            const getData = JSON.parse(localStorage.getItem(\"data\"));\r\n            const newData = [];\r\n            const listDays = Object.keys(getData);\r\n            listDays.map((day) => {\r\n                const dayMiniSecond = day * 1;\r\n                const YEAR = new Date(dayMiniSecond).getFullYear();\r\n                const MONTH = new Date(dayMiniSecond).getMonth();\r\n                const DAY = new Date(dayMiniSecond).getDate();\r\n                getData[day].map((item) => {\r\n                    const subject = {};\r\n                    const _class = `${item.address.split(\"_\")[0]}-${item.address.split(\" \")[1]}`;\r\n                    lessons.map((lesson, index) => {\r\n                        if (lesson === item.lesson) {\r\n                            subject.shift = index + 1;\r\n                            subject.text = `Ca ${shift[index]} : ${item.subject.split(\"-\")[0]} : ${_class}`;\r\n                            subject.startDate = new Date(YEAR, MONTH, DAY, startTimeHours[index], startTimeMinutes[index]);\r\n                            subject.endDate = new Date(YEAR, MONTH, DAY, endTimeHours[index], endTimeMinutes[index]);\r\n                        }\r\n                    });\r\n                    newData.push(subject);\r\n                });\r\n                return newData.sort((a, b) => a.shift - b.shift);\r\n            });\r\n            this.setState({\r\n                data: newData,\r\n            });\r\n        }\r\n    }\r\n    optionChanged = (e) => {\r\n        if (e.studentAccount === \"currentDate\") {\r\n            this.setState({\r\n                currentDate: e.value,\r\n            });\r\n        }\r\n    };\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({\r\n            anchorEl: null,\r\n        });\r\n    };\r\n\r\n    renderMenu = () => {\r\n        const { anchorEl } = this.state;\r\n        const isMenuOpen = Boolean(anchorEl);\r\n        return (\r\n            <Menu\r\n                className=\"menu-account\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n                id=\"menu\"\r\n                keepMounted\r\n                transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n                open={isMenuOpen}\r\n                onClose={this.handleMenuClose}\r\n            >\r\n                <div className=\"user-account\">\r\n                    <MenuItem onClick={this.logOut}>Đăng xuất</MenuItem>\r\n                </div>\r\n            </Menu>\r\n        );\r\n    };\r\n\r\n    logOut = () => {\r\n        const { history } = this.props;\r\n        history.push(\"/schedule\");\r\n        localStorage.removeItem(\"studentAccount\");\r\n        localStorage.removeItem(\"data\");\r\n    };\r\n\r\n    handleProfileMenuOpen = (e) => {\r\n        this.setState({\r\n            anchorEl: e.currentTarget,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { data, studentAccount } = this.state;\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"schedule-container\">\r\n                    <div className=\"schedule-title\">\r\n                        <DateRangeIcon />\r\n                        <p>Thời khóa biểu KMA</p>\r\n                    </div>\r\n                    <div className=\"icon-account\">\r\n                        <p>{`Xin chào ${studentAccount}`}</p>\r\n                        <IconButton edge=\"end\" aria-label=\"account of current user\" aria-controls=\"menu\" aria-haspopup=\"true\" onClick={this.handleProfileMenuOpen} color=\"inherit\">\r\n                            <div className=\"icon-account-avatar\">\r\n                                <img className=\"avatar-img\" src={avatar} alt=\"avatar\" />\r\n                            </div>\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n                {this.renderMenu()}\r\n                <Scheduler\r\n                    onOptionChanged={this.optionChanged}\r\n                    dataSource={data}\r\n                    views={views}\r\n                    adaptivityEnabled={true}\r\n                    defaultCurrentView={\"month\"}\r\n                    height={700}\r\n                    startDayHour={6}\r\n                    endDayHour={22}\r\n                />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Schedule);\r\n","import Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport md5 from 'md5';\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router';\r\nimport Swal from 'sweetalert2';\r\nimport AuthService from '../../AuthService';\r\nimport './style.css';\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showLoadding: false,\r\n            showPassword: false,\r\n            studentAccount: '',\r\n            studentPassword: '',\r\n        };\r\n        this.Auth = new AuthService();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const getData = JSON.parse(localStorage.getItem('data'));\r\n        if (getData) {\r\n            const { history } = this.props;\r\n            history.replace('/schedule/view');\r\n        }\r\n    }\r\n\r\n    onChangeInput = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    onShowPassword = () => {\r\n        const { showPassword } = this.state;\r\n        this.setState({\r\n            showPassword: !showPassword,\r\n        });\r\n    };\r\n\r\n    onSubmitFormLogin = () => {\r\n        const { history } = this.props;\r\n        const { studentAccount, studentPassword } = this.state;\r\n        if (!studentAccount || !studentPassword) {\r\n            Swal.fire(\r\n                'Vui lòng nhập đủ Tài khoản và Mật khẩu sinh viên của bạn !',\r\n                '',\r\n                'error'\r\n            );\r\n        } else if (\r\n            typeof studentAccount === 'undefined' ||\r\n            studentAccount.trim().length < studentAccount.length ||\r\n            studentAccount.split(' ').length > 1 ||\r\n            studentAccount == null ||\r\n            !studentAccount.match(/^[0-9a-zA-Z]{0,}$/)\r\n        ) {\r\n            Swal.fire(\r\n                'Tài khoản hoặc Mật khẩu của bạn không đúng định dạng !',\r\n                '',\r\n                'error'\r\n            );\r\n        } else {\r\n            const upperCasestudentAccount = studentAccount.toUpperCase();\r\n            const encodeStudentPassword = md5(studentPassword);\r\n            this.showLoadding();\r\n            this.Auth.login(\r\n                upperCasestudentAccount,\r\n                encodeStudentPassword\r\n            ).then((res) => {\r\n                const { dataJson, status } = res.data;\r\n                this.showAlert(status);\r\n                this.hideLoadding();\r\n                if (status) {\r\n                    localStorage.setItem('data', JSON.stringify(dataJson));\r\n                    localStorage.setItem(\r\n                        'studentAccount',\r\n                        JSON.stringify(upperCasestudentAccount)\r\n                    );\r\n                    history.replace('/schedule/view');\r\n                }\r\n            });\r\n        }\r\n    };\r\n    showAlert = (status) => {\r\n        const Toast = Swal.mixin({\r\n            toast: true,\r\n            position: 'top-end',\r\n            showConfirmButton: false,\r\n            timer: 5000,\r\n            timerProgressBar: true,\r\n            onOpen: (toast) => {\r\n                toast.addEventListener('mouseenter', Swal.stopTimer);\r\n                toast.addEventListener('mouseleave', Swal.resumeTimer);\r\n            },\r\n        });\r\n        Toast.fire({\r\n            icon: `${status ? 'success' : 'error'}`,\r\n            title: `${\r\n                status\r\n                    ? 'Đăng nhập thành công !'\r\n                    : 'Tài khoản hoặc mật khẩu không chính xác ! Hãy kiểm tra lại !'\r\n            }`,\r\n        });\r\n    };\r\n    showLoadding = () => {\r\n        this.setState({\r\n            showLoadding: true,\r\n        });\r\n    };\r\n    hideLoadding = () => {\r\n        this.setState({\r\n            showLoadding: false,\r\n        });\r\n    };\r\n    render() {\r\n        const { showPassword, showLoadding } = this.state;\r\n        return (\r\n            <div className=\"container\">\r\n                {showLoadding ? (\r\n                    <div className=\"loadding\">\r\n                        <CircularProgress />\r\n                    </div>\r\n                ) : (\r\n                    ''\r\n                )}\r\n                <div className=\"background\">\r\n                    <div className=\"login\">\r\n                        <h1>Thời Khóa biểu KMA</h1>\r\n                        <form className=\"login-form\">\r\n                            <div className=\"login-form-account\">\r\n                                <TextField\r\n                                    type=\"text\"\r\n                                    name=\"studentAccount\"\r\n                                    label=\"Tài khoản\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={this.onChangeInput}\r\n                                />\r\n                                <span className=\"login-form-icon\">\r\n                                    <PersonIcon />\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"login-form-password\">\r\n                                <TextField\r\n                                    type={showPassword ? 'text' : 'password'}\r\n                                    name=\"studentPassword\"\r\n                                    label=\"Mật khẩu\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={this.onChangeInput}\r\n                                />\r\n                                <span\r\n                                    className=\"login-form-icon\"\r\n                                    onClick={this.onShowPassword}\r\n                                >\r\n                                    {showPassword ? (\r\n                                        <VisibilityOffIcon />\r\n                                    ) : (\r\n                                        <VisibilityIcon />\r\n                                    )}\r\n                                </span>\r\n                            </div>\r\n                            <Button\r\n                                onClick={this.onSubmitFormLogin}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                            >\r\n                                Đăng nhập\r\n                            </Button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default withRouter(Login);\r\n","import React, { Component } from 'react';\r\nimport Schedule from './components/Schedule';\r\nimport Login from './components/Login';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <BrowserRouter>\r\n                <Switch>\r\n                    <Route path=\"/schedule/view\" component={() => <Schedule />} />\r\n                    <Route\r\n                        path=\"/schedule\"\r\n                        exact\r\n                        component={() => <Login />}\r\n                    />\r\n                </Switch>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
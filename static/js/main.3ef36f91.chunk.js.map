{"version":3,"sources":["image/avatar-default.png","components/Schedule/index.js","AuthService/index.js","components/Login/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","views","lessons","startTimeMiniSecond","endTimeMiniSecond","Schedule","props","optionChanged","e","fullName","setState","currentDate","value","handleMenuClose","anchorEl","renderMenu","state","isMenuOpen","Boolean","Menu","className","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","logOut","history","replace","localStorage","removeItem","handleProfileMenuOpen","currentTarget","Date","data","studentAccount","getData","JSON","parse","getItem","newData","Object","keys","map","day","subject","dayMiniSecond","item","text","address","lesson","index","startDate","endDate","push","this","Swal","fire","Fragment","IconButton","edge","aria-label","aria-controls","aria-haspopup","color","src","avatar","alt","onOptionChanged","dataSource","defaultCurrentView","height","startDayHour","endDayHour","React","Component","withRouter","AuthService","domain","login","studentPassword","urlencoded","URLSearchParams","append","requestOptions","header","Accept","method","redirect","axios","then","res","Promise","resolve","Login","onChangeInput","target","name","onShowPassword","showPassword","onSubmitFormLogin","trim","length","split","match","upperCasestudentAccount","toUpperCase","encodeStudentPassword","md5","showLoadding","Auth","dataJson","status","setTimeout","showAlert","hideLoadding","setItem","stringify","mixin","toast","position","showConfirmButton","timer","timerProgressBar","onOpen","addEventListener","stopTimer","resumeTimer","icon","title","CircularProgress","TextField","type","label","variant","onChange","Button","App","path","component","exact","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3ef36f91.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar-default.17b08a8e.png\";","import { IconButton } from '@material-ui/core';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport DateRangeIcon from '@material-ui/icons/DateRange';\r\nimport Scheduler from 'devextreme-react/scheduler';\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router';\r\nimport Swal from 'sweetalert2';\r\nimport avatar from '../../image/avatar-default.png';\r\nimport './style.css';\r\n\r\nconst views = ['agenda', 'month', 'day', 'week'];\r\nconst lessons = ['1,2,3', '4,5,6', '7,8,9', '10,11,12', '13,14,15,16'];\r\nconst startTimeMiniSecond = [\r\n    25200000, //7h00\r\n    34500000, //9h35\r\n    45000000, //12h30\r\n    54300000, //15h05\r\n    64800000, //18h00\r\n];\r\nconst endTimeMiniSecond = [\r\n    33900000, //9h25\r\n    43200000, //12h00\r\n    53700000, //14h55\r\n    63000000, //17h30\r\n    76500000, //21h15\r\n];\r\n\r\nclass Schedule extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentDate: new Date(),\r\n            data: [],\r\n            studentAccount: '',\r\n            anchorEl: null,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const getData = JSON.parse(localStorage.getItem('data'));\r\n        const studentAccount = JSON.parse(\r\n            localStorage.getItem('studentAccount')\r\n        );\r\n        if (getData) {\r\n            const newData = [];\r\n            const list60Days = Object.keys(getData);\r\n            list60Days.map((day) => {\r\n                const subject = {};\r\n                const dayMiniSecond = day * 1;\r\n                getData[day].map((item) => {\r\n                    subject.text = `${item.subject} - ${item.address}`;\r\n                    lessons.map((lesson, index) => {\r\n                        if (lesson === item.lesson) {\r\n                            subject.startDate = new Date(\r\n                                dayMiniSecond + startTimeMiniSecond[index]\r\n                            );\r\n                            subject.endDate = new Date(\r\n                                dayMiniSecond + endTimeMiniSecond[index]\r\n                            );\r\n                        }\r\n                        return 1;\r\n                    });\r\n                    return 1;\r\n                });\r\n                return newData.push(subject);\r\n            });\r\n            this.setState({\r\n                data: newData,\r\n                studentAccount,\r\n            });\r\n        } else {\r\n            const { history } = this.props;\r\n            history.replace('/');\r\n            Swal.fire(\r\n                'Bạn chưa đăng nhập?',\r\n                'Hãy đăng nhập tài khoản sinh viên của mình !',\r\n                'question'\r\n            );\r\n        }\r\n    }\r\n\r\n    optionChanged = (e) => {\r\n        if (e.fullName === 'currentDate') {\r\n            this.setState({\r\n                currentDate: e.value,\r\n            });\r\n        }\r\n    };\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({\r\n            anchorEl: null,\r\n        });\r\n    };\r\n\r\n    renderMenu = () => {\r\n        const { anchorEl } = this.state;\r\n        const isMenuOpen = Boolean(anchorEl);\r\n        return (\r\n            <Menu\r\n                className=\"menu-account\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                id=\"menu\"\r\n                keepMounted\r\n                transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                open={isMenuOpen}\r\n                onClose={this.handleMenuClose}\r\n            >\r\n                <div className=\"user-account\">\r\n                    <MenuItem onClick={this.logOut}>Đăng xuất</MenuItem>\r\n                </div>\r\n            </Menu>\r\n        );\r\n    };\r\n\r\n    logOut = () => {\r\n        const { history } = this.props;\r\n        history.replace('/');\r\n        localStorage.removeItem('data');\r\n        localStorage.removeItem('studentAccount');\r\n    };\r\n\r\n    handleProfileMenuOpen = (e) => {\r\n        this.setState({\r\n            anchorEl: e.currentTarget,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { data, studentAccount } = this.state;\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"schedule-container\">\r\n                    <div className=\"schedule-title\">\r\n                        <DateRangeIcon />\r\n                        <p>Thời khóa biểu KMA</p>\r\n                    </div>\r\n                    <div className=\"icon-account\">\r\n                        <p>{`Xin chào ${studentAccount} !`}</p>\r\n                        <IconButton\r\n                            edge=\"end\"\r\n                            aria-label=\"account of current user\"\r\n                            aria-controls=\"menu\"\r\n                            aria-haspopup=\"true\"\r\n                            onClick={this.handleProfileMenuOpen}\r\n                            color=\"inherit\"\r\n                        >\r\n                            <div className=\"icon-account-avatar\">\r\n                                <img\r\n                                    className=\"avatar-img\"\r\n                                    src={avatar}\r\n                                    alt=\"avatar\"\r\n                                />\r\n                            </div>\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n                {this.renderMenu()}\r\n                <Scheduler\r\n                    onOptionChanged={this.optionChanged}\r\n                    dataSource={data}\r\n                    views={views}\r\n                    defaultCurrentView={'month'}\r\n                    currentDate={this.state.currentDate}\r\n                    height={600}\r\n                    startDayHour={6}\r\n                    endDayHour={22}\r\n                />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Schedule);\r\n","import axios from 'axios';\r\n\r\nexport default class AuthService {\r\n    constructor(domain) {\r\n        this.domain =\r\n            domain || 'http://139.180.203.181:5000/api/schedule';\r\n    }\r\n\r\n    login = (studentAccount, studentPassword) => {\r\n        const headers = {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n        };\r\n\r\n        const urlencoded = new URLSearchParams();\r\n        urlencoded.append('studentAccount', studentAccount);\r\n        urlencoded.append('studentPassword', studentPassword);\r\n\r\n        const requestOptions = {\r\n            header: headers,\r\n            method: 'POST',\r\n            data: urlencoded,\r\n            redirect: 'follow',\r\n        };\r\n\r\n        return axios(`${this.domain}/guest`, requestOptions).then((res) => {\r\n            return Promise.resolve(res);\r\n        });\r\n    };\r\n}\r\n","import Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport md5 from 'md5';\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router';\r\nimport Swal from 'sweetalert2';\r\nimport AuthService from '../../AuthService';\r\nimport './style.css';\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showLoadding: false,\r\n            showPassword: false,\r\n            studentAccount: '',\r\n            studentPassword: '',\r\n        };\r\n        this.Auth = new AuthService();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const getData = JSON.parse(localStorage.getItem('data'));\r\n        if (getData) {\r\n            const { history } = this.props;\r\n            history.replace('/schedule');\r\n        }\r\n    }\r\n\r\n    onChangeInput = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    onShowPassword = () => {\r\n        const { showPassword } = this.state;\r\n        this.setState({\r\n            showPassword: !showPassword,\r\n        });\r\n    };\r\n\r\n    onSubmitFormLogin = () => {\r\n        const { history } = this.props;\r\n        const { studentAccount, studentPassword } = this.state;\r\n        if (!studentAccount || !studentPassword) {\r\n            Swal.fire(\r\n                'Vui lòng nhập đủ Tài khoản và Mật khẩu sinh viên của bạn !',\r\n                '',\r\n                'error'\r\n            );\r\n        } else if (\r\n            typeof studentAccount === 'undefined' ||\r\n            studentAccount.trim().length < studentAccount.length ||\r\n            studentAccount.split(' ').length > 1 ||\r\n            studentAccount === null ||\r\n            !studentAccount.match(/^[0-9a-zA-Z]{0,}$/)\r\n        ) {\r\n            Swal.fire(\r\n                'Tài khoản hoặc Mật khẩu của bạn không đúng định dạng !',\r\n                '',\r\n                'error'\r\n            );\r\n        } else {\r\n            const upperCasestudentAccount = studentAccount.toUpperCase();\r\n            const encodeStudentPassword = md5(studentPassword);\r\n            this.showLoadding();\r\n            this.Auth.login(\r\n                upperCasestudentAccount,\r\n                encodeStudentPassword\r\n            ).then((res) => {\r\n                const { dataJson, status } = res.data;\r\n                setTimeout(() => {\r\n                    this.showAlert(status);\r\n                    this.hideLoadding();\r\n                }, 200);\r\n                if (status) {\r\n                    localStorage.setItem('data', JSON.stringify(dataJson));\r\n                    localStorage.setItem(\r\n                        'studentAccount',\r\n                        JSON.stringify(upperCasestudentAccount)\r\n                    );\r\n                    history.replace('/schedule');\r\n                }\r\n            });\r\n        }\r\n    };\r\n    showAlert = (status) => {\r\n        const Toast = Swal.mixin({\r\n            toast: true,\r\n            position: 'top-end',\r\n            showConfirmButton: false,\r\n            timer: 5000,\r\n            timerProgressBar: true,\r\n            onOpen: (toast) => {\r\n                toast.addEventListener('mouseenter', Swal.stopTimer);\r\n                toast.addEventListener('mouseleave', Swal.resumeTimer);\r\n            },\r\n        });\r\n        Toast.fire({\r\n            icon: `${status ? 'success' : 'error'}`,\r\n            title: `${\r\n                status\r\n                    ? 'Đăng nhập thành công !'\r\n                    : 'Đã xảy ra lỗi ! Hãy kiểm tra lại !'\r\n            }`,\r\n        });\r\n    };\r\n    showLoadding = () => {\r\n        this.setState({\r\n            showLoadding: true,\r\n        });\r\n    };\r\n    hideLoadding = () => {\r\n        this.setState({\r\n            showLoadding: false,\r\n        });\r\n    };\r\n    render() {\r\n        const { showPassword, showLoadding } = this.state;\r\n        return (\r\n            <div className=\"container\">\r\n                {showLoadding ? (\r\n                    <div className=\"loadding\">\r\n                        <CircularProgress />\r\n                    </div>\r\n                ) : (\r\n                    ''\r\n                )}\r\n                <div className=\"background\">\r\n                    <div className=\"login\">\r\n                        <h1>Thời Khóa biểu KMA</h1>\r\n                        <form className=\"login-form\">\r\n                            <div className=\"login-form-account\">\r\n                                <TextField\r\n                                    type=\"text\"\r\n                                    name=\"studentAccount\"\r\n                                    label=\"Tài khoản\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={this.onChangeInput}\r\n                                />\r\n                                <span className=\"login-form-icon\">\r\n                                    <PersonIcon />\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"login-form-password\">\r\n                                <TextField\r\n                                    type={showPassword ? 'text' : 'password'}\r\n                                    name=\"studentPassword\"\r\n                                    label=\"Mật khẩu\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={this.onChangeInput}\r\n                                />\r\n                                <span\r\n                                    className=\"login-form-icon\"\r\n                                    onClick={this.onShowPassword}\r\n                                >\r\n                                    {showPassword ? (\r\n                                        <VisibilityOffIcon />\r\n                                    ) : (\r\n                                        <VisibilityIcon />\r\n                                    )}\r\n                                </span>\r\n                            </div>\r\n                            <Button\r\n                                onClick={this.onSubmitFormLogin}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                            >\r\n                                Đăng nhập\r\n                            </Button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default withRouter(Login);\r\n","import React, { Component } from 'react';\nimport Schedule from './components/Schedule';\nimport Login from './components/Login';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport \"./App.css\";\n\nclass App extends Component {\n    render() {\n        return (\n            <BrowserRouter>\n                <Switch>\n                    <Route path=\"/schedule\" component={() => <Schedule />} />\n                    <Route\n                        path=\"/\"\n                        exact\n                        component={() => <Login />}\n                    />\n                </Switch>\n            </BrowserRouter>\n        );\n    }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}
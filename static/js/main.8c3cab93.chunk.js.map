{"version":3,"sources":["image/avatar-default.png","AuthService/index.js","components/Schedule/index.js","components/Login/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AuthService","domain","login","studentAccount","studentPassword","urlencoded","URLSearchParams","append","axios","post","proxy","then","res","Promise","resolve","this","views","lessons","startTimeHours","startTimeMinutes","endTimeHours","endTimeMinutes","shift","Schedule","props","optionChanged","e","setState","currentDate","value","handleMenuClose","anchorEl","renderMenu","state","isMenuOpen","Boolean","Menu","className","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","logOut","history","push","localStorage","removeItem","handleProfileMenuOpen","currentTarget","data","Auth","getItem","getData","JSON","parse","newData","Object","keys","map","day","dayMiniSecond","YEAR","Date","getFullYear","MONTH","getMonth","DAY","getDate","item","subject","_class","address","split","lesson","index","text","startDate","endDate","sort","a","b","replace","Fragment","IconButton","edge","aria-label","aria-controls","aria-haspopup","color","src","avatar","alt","onOptionChanged","dataSource","adaptivityEnabled","defaultCurrentView","height","startDayHour","endDayHour","React","Component","withRouter","Login","onChangeInput","target","name","onShowPassword","showPassword","onSubmitFormLogin","trim","length","match","Swal","fire","upperCasestudentAccount","toUpperCase","encodeStudentPassword","md5","showLoadding","dataJson","status","showAlert","hideLoadding","setItem","stringify","mixin","toast","position","showConfirmButton","timer","timerProgressBar","onOpen","addEventListener","stopTimer","resumeTimer","icon","title","CircularProgress","TextField","type","label","variant","onChange","Button","App","path","component","exact","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8c3cab93.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar-default.17b08a8e.png\";","import axios from 'axios';\n\nexport default class AuthService {\n    constructor(domain) {\n        this.domain =\n            domain || 'http://167.179.115.162:5000/api/schedule/guest';\n        this.proxy = \"https://cors-anywhere.herokuapp.com/\";\n    }\n\n    login = (studentAccount, studentPassword) => {\n        const urlencoded = new URLSearchParams();\n        urlencoded.append('studentAccount', studentAccount);\n        urlencoded.append('studentPassword', studentPassword);\n        return axios.post(`${this.proxy + this.domain}`, urlencoded).then((res) => {\n            return Promise.resolve(res);\n        });\n    };\n}\n","import { IconButton } from \"@material-ui/core\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport Scheduler from \"devextreme-react/scheduler\";\nimport React from \"react\";\nimport { withRouter } from \"react-router\";\nimport avatar from \"../../image/avatar-default.png\";\nimport AuthService from \"../../AuthService\";\nimport \"./style.css\";\n\nconst views = [\"agenda\", \"month\", \"day\", \"week\"];\nconst lessons = [\"1,2,3\", \"1,2,3,4,5,6\", \"4,5,6\", \"7,8,9\", \"7,8,9,10,11,12\", \"10,11,12\", \"13,14,15,16\"];\nconst startTimeHours = [7, 7, 9, 12, 12, 15, 18];\nconst startTimeMinutes = [0, 0, 30, 35, 30, 5, 0];\nconst endTimeHours = [9, 12, 12, 14, 17, 17, 21, 17];\nconst endTimeMinutes = [25, 0, 0, 55, 30, 30, 15];\nconst shift = [\"1\", \"1-2\", \"2\", \"3\", \"3-4\", \"4\", \"5\"];\n\nclass Schedule extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            anchorEl: null,\n            studentAccount: null,\n        };\n        this.Auth = new AuthService();\n    }\n    componentDidMount() {\n        const { history } = this.props;\n        const studentAccount = localStorage.getItem(\"studentAccount\");\n        if (!studentAccount) {\n            history.replace(\"/schedule\");\n        } else {\n            this.setState({\n                ...this.state,\n                studentAccount: studentAccount,\n            });\n            const getData = JSON.parse(localStorage.getItem(\"data\"));\n            const newData = [];\n            const listDays = Object.keys(getData);\n            listDays.map((day) => {\n                const dayMiniSecond = day * 1;\n                const YEAR = new Date(dayMiniSecond).getFullYear();\n                const MONTH = new Date(dayMiniSecond).getMonth();\n                const DAY = new Date(dayMiniSecond).getDate();\n                getData[day].map((item) => {\n                    const subject = {};\n                    const _class = `${item.address.split(\"_\")[0]}-${item.address.split(\" \")[1]}`;\n                    lessons.map((lesson, index) => {\n                        if (lesson === item.lesson) {\n                            subject.shift = index + 1;\n                            subject.text = `Ca ${shift[index]} : ${item.subject.split(\"-\")[0]} : ${_class}`;\n                            subject.startDate = new Date(YEAR, MONTH, DAY, startTimeHours[index], startTimeMinutes[index]);\n                            subject.endDate = new Date(YEAR, MONTH, DAY, endTimeHours[index], endTimeMinutes[index]);\n                        }\n                    });\n                    newData.push(subject);\n                });\n                return newData.sort((a, b) => a.shift - b.shift);\n            });\n            this.setState({\n                data: newData,\n            });\n        }\n    }\n    optionChanged = (e) => {\n        if (e.studentAccount === \"currentDate\") {\n            this.setState({\n                currentDate: e.value,\n            });\n        }\n    };\n\n    handleMenuClose = () => {\n        this.setState({\n            anchorEl: null,\n        });\n    };\n\n    renderMenu = () => {\n        const { anchorEl } = this.state;\n        const isMenuOpen = Boolean(anchorEl);\n        return (\n            <Menu\n                className=\"menu-account\"\n                anchorEl={anchorEl}\n                anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n                id=\"menu\"\n                keepMounted\n                transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n                open={isMenuOpen}\n                onClose={this.handleMenuClose}\n            >\n                <div className=\"user-account\">\n                    <MenuItem onClick={this.logOut}>Đăng xuất</MenuItem>\n                </div>\n            </Menu>\n        );\n    };\n\n    logOut = () => {\n        const { history } = this.props;\n        history.push(\"/schedule\");\n        localStorage.removeItem(\"studentAccount\");\n        localStorage.removeItem(\"data\");\n    };\n\n    handleProfileMenuOpen = (e) => {\n        this.setState({\n            anchorEl: e.currentTarget,\n        });\n    };\n\n    render() {\n        const { data, studentAccount } = this.state;\n        return (\n            <React.Fragment>\n                <div className=\"schedule-container\">\n                    <div className=\"schedule-title\">\n                        <DateRangeIcon />\n                        <p>Thời khóa biểu KMA</p>\n                    </div>\n                    <div className=\"icon-account\">\n                        <p>{`Xin chào ${studentAccount} !`}</p>\n                        <IconButton edge=\"end\" aria-label=\"account of current user\" aria-controls=\"menu\" aria-haspopup=\"true\" onClick={this.handleProfileMenuOpen} color=\"inherit\">\n                            <div className=\"icon-account-avatar\">\n                                <img className=\"avatar-img\" src={avatar} alt=\"avatar\" />\n                            </div>\n                        </IconButton>\n                    </div>\n                </div>\n                {this.renderMenu()}\n                <Scheduler\n                    onOptionChanged={this.optionChanged}\n                    dataSource={data}\n                    views={views}\n                    adaptivityEnabled={true}\n                    defaultCurrentView={\"month\"}\n                    height={700}\n                    startDayHour={6}\n                    endDayHour={22}\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withRouter(Schedule);\n","import Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport TextField from '@material-ui/core/TextField';\nimport PersonIcon from '@material-ui/icons/Person';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport md5 from 'md5';\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport Swal from 'sweetalert2';\nimport AuthService from '../../AuthService';\nimport './style.css';\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showLoadding: false,\n            showPassword: false,\n            studentAccount: '',\n            studentPassword: '',\n        };\n        this.Auth = new AuthService();\n    }\n\n    componentDidMount() {\n        const getData = JSON.parse(localStorage.getItem('data'));\n        if (getData) {\n            const { history } = this.props;\n            history.replace('/schedule/view');\n        }\n    }\n\n    onChangeInput = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value,\n        });\n    };\n\n    onShowPassword = () => {\n        const { showPassword } = this.state;\n        this.setState({\n            showPassword: !showPassword,\n        });\n    };\n\n    onSubmitFormLogin = () => {\n        const { history } = this.props;\n        const { studentAccount, studentPassword } = this.state;\n        if (!studentAccount || !studentPassword) {\n            Swal.fire(\n                'Vui lòng nhập đủ Tài khoản và Mật khẩu sinh viên của bạn !',\n                '',\n                'error'\n            );\n        } else if (\n            typeof studentAccount === 'undefined' ||\n            studentAccount.trim().length < studentAccount.length ||\n            studentAccount.split(' ').length > 1 ||\n            studentAccount == null ||\n            !studentAccount.match(/^[0-9a-zA-Z]{0,}$/)\n        ) {\n            Swal.fire(\n                'Tài khoản hoặc Mật khẩu của bạn không đúng định dạng !',\n                '',\n                'error'\n            );\n        } else {\n            const upperCasestudentAccount = studentAccount.toUpperCase();\n            const encodeStudentPassword = md5(studentPassword);\n            this.showLoadding();\n            this.Auth.login(\n                upperCasestudentAccount,\n                encodeStudentPassword\n            ).then((res) => {\n                const { dataJson, status } = res.data;\n                this.showAlert(status);\n                this.hideLoadding();\n                if (status) {\n                    localStorage.setItem('data', JSON.stringify(dataJson));\n                    localStorage.setItem(\n                        'studentAccount',\n                        JSON.stringify(upperCasestudentAccount)\n                    );\n                    history.replace('/schedule/view');\n                }\n            });\n        }\n    };\n    showAlert = (status) => {\n        const Toast = Swal.mixin({\n            toast: true,\n            position: 'top-end',\n            showConfirmButton: false,\n            timer: 5000,\n            timerProgressBar: true,\n            onOpen: (toast) => {\n                toast.addEventListener('mouseenter', Swal.stopTimer);\n                toast.addEventListener('mouseleave', Swal.resumeTimer);\n            },\n        });\n        Toast.fire({\n            icon: `${status ? 'success' : 'error'}`,\n            title: `${\n                status\n                    ? 'Đăng nhập thành công !'\n                    : 'Tài khoản hoặc mật khẩu không chính xác ! Hãy kiểm tra lại !'\n            }`,\n        });\n    };\n    showLoadding = () => {\n        this.setState({\n            showLoadding: true,\n        });\n    };\n    hideLoadding = () => {\n        this.setState({\n            showLoadding: false,\n        });\n    };\n    render() {\n        const { showPassword, showLoadding } = this.state;\n        return (\n            <div className=\"container\">\n                {showLoadding ? (\n                    <div className=\"loadding\">\n                        <CircularProgress />\n                    </div>\n                ) : (\n                    ''\n                )}\n                <div className=\"background\">\n                    <div className=\"login\">\n                        <h1>Thời Khóa biểu KMA</h1>\n                        <form className=\"login-form\">\n                            <div className=\"login-form-account\">\n                                <TextField\n                                    type=\"text\"\n                                    name=\"studentAccount\"\n                                    label=\"Tài khoản\"\n                                    variant=\"outlined\"\n                                    onChange={this.onChangeInput}\n                                />\n                                <span className=\"login-form-icon\">\n                                    <PersonIcon />\n                                </span>\n                            </div>\n                            <div className=\"login-form-password\">\n                                <TextField\n                                    type={showPassword ? 'text' : 'password'}\n                                    name=\"studentPassword\"\n                                    label=\"Mật khẩu\"\n                                    variant=\"outlined\"\n                                    onChange={this.onChangeInput}\n                                />\n                                <span\n                                    className=\"login-form-icon\"\n                                    onClick={this.onShowPassword}\n                                >\n                                    {showPassword ? (\n                                        <VisibilityOffIcon />\n                                    ) : (\n                                        <VisibilityIcon />\n                                    )}\n                                </span>\n                            </div>\n                            <Button\n                                onClick={this.onSubmitFormLogin}\n                                variant=\"contained\"\n                                color=\"primary\"\n                            >\n                                Đăng nhập\n                            </Button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default withRouter(Login);\n","import React, { Component } from 'react';\nimport Schedule from './components/Schedule';\nimport Login from './components/Login';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport \"./App.css\";\n\nclass App extends Component {\n    render() {\n        return (\n            <BrowserRouter>\n                <Switch>\n                    <Route path=\"/schedule/view\" component={() => <Schedule />} />\n                    <Route\n                        path=\"/schedule\"\n                        exact\n                        component={() => <Login />}\n                    />\n                </Switch>\n            </BrowserRouter>\n        );\n    }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}
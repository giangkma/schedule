{"version":3,"sources":["image/avatar-default.png","AuthService/index.js","components/Schedule/index.js","components/pageLoading/index.js","components/Login/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AuthService","domain","fetchDataSchedulesApi","fullName","requestOptions","header","Accept","method","redirect","axios","then","res","Promise","resolve","this","views","lessons","startTimeHours","startTimeMinutes","endTimeHours","endTimeMinutes","Schedule","props","optionChanged","e","setState","currentDate","value","handleMenuClose","anchorEl","renderMenu","state","isMenuOpen","Boolean","Menu","className","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","logOut","history","replace","localStorage","removeItem","handleProfileMenuOpen","currentTarget","Date","data","Auth","getItem","status","getData","newData","Object","keys","map","day","dayMiniSecond","YEAR","getFullYear","MONTH","getMonth","DAY","getDate","item","subject","_class","address","split","lesson","index","shift","text","startDate","endDate","push","sort","a","b","Swal","fire","Fragment","IconButton","edge","aria-label","aria-controls","aria-haspopup","color","src","avatar","alt","onOptionChanged","dataSource","adaptivityEnabled","defaultCurrentView","height","startDayHour","endDayHour","React","Component","withRouter","PageLoading","Login","onChangeInput","target","onSubmitFormLogin","trim","length","match","showLoadding","setItem","setTimeout","showAlert","hideLoadding","mixin","toast","position","showConfirmButton","timer","timerProgressBar","onOpen","addEventListener","stopTimer","resumeTimer","icon","title","FormControl","variant","InputLabel","Select","labelId","onChange","label","Button","App","path","component","exact","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.dd2e71f6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar-default.17b08a8e.png\";","import axios from 'axios';\n\nexport default class AuthService {\n    constructor(domain) {\n        this.domain =\n            domain || 'https://5f3a9d2f2300b100169a8efe.mockapi.io';\n    }\n\n    fetchDataSchedulesApi = (fullName) => {\n        const headers = {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        };\n        const requestOptions = {\n            header: headers,\n            method: 'GET',\n            redirect: 'follow',\n        };\n\n        return axios(`${this.domain}/${fullName}`, requestOptions).then((res) => {\n            return Promise.resolve(res);\n        });\n    };\n}\n","import { IconButton } from \"@material-ui/core\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport Scheduler from \"devextreme-react/scheduler\";\nimport React from \"react\";\nimport { withRouter } from \"react-router\";\nimport Swal from \"sweetalert2\";\nimport avatar from \"../../image/avatar-default.png\";\nimport AuthService from \"../../AuthService\";\nimport \"./style.css\";\n\nconst views = [\"agenda\", \"month\", \"day\", \"week\"];\nconst lessons = [\"1,2,3\", \"4,5,6\", \"7,8,9\", \"10,11,12\", \"13,14,15,16\"];\nconst startTimeHours = [7, 9, 12, 15, 18];\nconst startTimeMinutes = [0, 35, 30, 5, 0];\nconst endTimeHours = [9, 12, 14, 17, 21];\nconst endTimeMinutes = [25, 0, 55, 30, 15];\n\nclass Schedule extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentDate: new Date(),\n            data: [],\n            anchorEl: null,\n            fullName: null,\n        };\n        this.Auth = new AuthService();\n    }\n    componentDidMount() {\n        const { history } = this.props;\n        const fullName = localStorage.getItem(\"fullName\");\n        if (!fullName) {\n            history.replace(\"/schedule\");\n            Swal.fire(\"Bạn chưa nhập tên của bạn?\", \"\", \"error\");\n        }\n        else {\n            this.setState({\n                ...this.state,\n                fullName: fullName,\n            });\n            this.Auth.fetchDataSchedulesApi(fullName).then((res) => {\n                if (res.status === 200) {\n                    const getData = res.data[0];\n                    const newData = [];\n                    const listDays = Object.keys(getData);\n                    listDays.map((day) => {\n                        const dayMiniSecond = day * 1;\n                        const YEAR = new Date(dayMiniSecond).getFullYear();\n                        const MONTH = new Date(dayMiniSecond).getMonth();\n                        const DAY = new Date(dayMiniSecond).getDate();\n                        getData[day].map((item) => {\n                            const subject = {};\n                            const _class = `${item.address.split(\"_\")[0]}-${item.address.split(\" \")[1]}`;\n                            lessons.map((lesson, index) => {\n                                if (lesson === item.lesson) {\n                                    subject.shift = index + 1;\n                                    subject.text = `Ca ${index + 1} : ${item.subject.split(\"-\")[0]} : ${_class}`;\n                                    subject.startDate = new Date(\n                                        YEAR,\n                                        MONTH,\n                                        DAY,\n                                        startTimeHours[index],\n                                        startTimeMinutes[index]\n                                    );\n                                    subject.endDate = new Date(\n                                        YEAR,\n                                        MONTH,\n                                        DAY,\n                                        endTimeHours[index],\n                                        endTimeMinutes[index]\n                                    );\n                                }\n                            });\n                            newData.push(subject);\n                        });\n                        return newData.sort((a, b) => a.shift -b.shift);\n                    });\n                    this.setState({\n                        data: newData,\n                    });\n                } else {\n                    history.replace(\"/schedule\");\n                    Swal.fire(\"Đã sảy ra lỗi?\", \"\", \"error\");\n                }\n            });\n        }\n    }\n    optionChanged = (e) => {\n        if (e.fullName === \"currentDate\") {\n            this.setState({\n                currentDate: e.value,\n            });\n        }\n    };\n\n    handleMenuClose = () => {\n        this.setState({\n            anchorEl: null,\n        });\n    };\n\n    renderMenu = () => {\n        const { anchorEl } = this.state;\n        const isMenuOpen = Boolean(anchorEl);\n        return (\n            <Menu\n                className=\"menu-account\"\n                anchorEl={anchorEl}\n                anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n                id=\"menu\"\n                keepMounted\n                transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n                open={isMenuOpen}\n                onClose={this.handleMenuClose}\n            >\n                <div className=\"user-account\">\n                    <MenuItem onClick={this.logOut}>Đăng xuất</MenuItem>\n                </div>\n            </Menu>\n        );\n    };\n\n    logOut = () => {\n        const { history } = this.props;\n        history.replace(\"/schedule\");\n        localStorage.removeItem(\"fullName\");\n    };\n\n    handleProfileMenuOpen = (e) => {\n        this.setState({\n            anchorEl: e.currentTarget,\n        });\n    };\n\n    render() {\n        const { data, fullName } = this.state;\n        return (\n            <React.Fragment>\n                <div className=\"schedule-container\">\n                    <div className=\"schedule-title\">\n                        <DateRangeIcon />\n                        <p>Thời khóa biểu KMA</p>\n                    </div>\n                    <div className=\"icon-account\">\n                        <p>{`Xin chào ${fullName} !`}</p>\n                        <IconButton\n                            edge=\"end\"\n                            aria-label=\"account of current user\"\n                            aria-controls=\"menu\"\n                            aria-haspopup=\"true\"\n                            onClick={this.handleProfileMenuOpen}\n                            color=\"inherit\"\n                        >\n                            <div className=\"icon-account-avatar\">\n                                <img\n                                    className=\"avatar-img\"\n                                    src={avatar}\n                                    alt=\"avatar\"\n                                />\n                            </div>\n                        </IconButton>\n                    </div>\n                </div>\n                {this.renderMenu()}\n                <Scheduler\n                    onOptionChanged={this.optionChanged}\n                    dataSource={data}\n                    views={views}\n                    adaptivityEnabled={true}\n                    defaultCurrentView={\"month\"}\n                    currentDate={this.state.currentDate}\n                    height={700}\n                    startDayHour={6}\n                    endDayHour={22}\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withRouter(Schedule);\n","import React from 'react';\nimport \"./style.css\";\n\nconst PageLoading = () => {\n    return (\n      <div className=\"container-page-loading\">\n        <span className=\"custom-page-loading\">\n          <span>{`4`}</span>\n          <span>{`0`}</span>\n          <span>{`5`}</span>\n        </span>\n      </div>\n    );\n  };\n  \n  export default PageLoading;","import Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router\";\nimport Swal from \"sweetalert2\";\nimport AuthService from \"../../AuthService\";\nimport PageLoading from \"../pageLoading\";\nimport \"./style.css\";\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showLoadding: false,\n            fullName: \"\",\n        };\n        this.Auth = new AuthService();\n    }\n\n    componentDidMount() {\n        const fullName = localStorage.getItem(\"fullName\");\n        if (fullName) {\n            const { history } = this.props;\n            history.replace(\"/schedule/view\");\n        }\n    }\n\n    onChangeInput = (e) => {\n        this.setState({\n            ...this.state,\n            fullName: e.target.value,\n        });\n    };\n\n    onSubmitFormLogin = async () => {\n        const { history } = this.props;\n        const { fullName } = this.state;\n        if (!fullName) {\n            Swal.fire(\n                \"Vui lòng nhập tên của bạn !\",\n                \"vd: dangtruonggiang\",\n                \"error\"\n            );\n        } else if (\n            typeof fullName === \"undefined\" ||\n            fullName.trim().length < fullName.length ||\n            fullName.split(\" \").length > 1 ||\n            fullName === null ||\n            !fullName.match(/^[0-9a-zA-Z]{0,}$/)\n        ) {\n            Swal.fire(\n                \"Tài khoản hoặc Mật khẩu của bạn không đúng định dạng !\",\n                \"\",\n                \"error\"\n            );\n        } else {\n            this.showLoadding();\n            await this.Auth.fetchDataSchedulesApi(fullName).then((res) => {\n                if (res.status === 200) {\n                    localStorage.setItem(\"fullName\", fullName);\n                    setTimeout(() => {\n                        this.showAlert(true);\n                        this.hideLoadding();\n                        history.replace(\"/schedule/view\");\n                    }, 1500);\n                } else {\n                    this.showAlert(false);\n                    setTimeout(() => {\n                        this.hideLoadding();\n                    }, 1500);\n                }\n            });\n        }\n    };\n    showAlert = (status) => {\n        const Toast = Swal.mixin({\n            toast: true,\n            position: \"top-end\",\n            showConfirmButton: false,\n            timer: 3000,\n            timerProgressBar: true,\n            onOpen: (toast) => {\n                toast.addEventListener(\"mouseenter\", Swal.stopTimer);\n                toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\n            },\n        });\n        Toast.fire({\n            icon: `${status ? \"success\" : \"error\"}`,\n            title: `${\n                status\n                    ? \"Đăng nhập thành công !\"\n                    : \"Đã xảy ra lỗi ! Hãy kiểm tra lại !\"\n            }`,\n        });\n    };\n    showLoadding = () => {\n        this.setState({\n            showLoadding: true,\n        });\n    };\n    hideLoadding = () => {\n        this.setState({\n            showLoadding: false,\n        });\n    };\n    render() {\n        const { showLoadding, fullName } = this.state;\n        return (\n            <div className=\"container\">\n                {showLoadding ? (\n                    <div className=\"loadding\">\n                        <PageLoading />\n                    </div>\n                ) : (\n                    \"\"\n                )}\n                <div className=\"background\">\n                    <div className=\"login\">\n                        <h1>Thời Khóa biểu KMA</h1>\n                        <form className=\"login-form\">\n                            <div className=\"login-form-account\">\n                                <FormControl variant=\"outlined\" className=\"\">\n                                    <InputLabel id=\"demo-simple-select-outlined-label\">\n                                        Họ và Tên\n                                    </InputLabel>\n                                    <Select\n                                        labelId=\"demo-simple-select-outlined-label\"\n                                        id=\"demo-simple-select-outlined\"\n                                        value={fullName}\n                                        onChange={this.onChangeInput}\n                                        label=\"Họ và tên\"\n                                    >\n                                        <MenuItem value=\"dangtruonggiang\">\n                                            Đặng Trường Giang\n                                        </MenuItem>\n                                        <MenuItem value=\"letranminhhieu\">\n                                            Lê Trần Minh Hiếu\n                                        </MenuItem>\n                                        <MenuItem value=\"nguyenvanlong\">\n                                            Nguyễn Văn Long\n                                        </MenuItem>\n                                        <MenuItem value=\"taotienloc\">\n                                            Tào Tiến Lộc\n                                        </MenuItem>\n                                    </Select>\n                                </FormControl>\n                            </div>\n                            <Button\n                                onClick={this.onSubmitFormLogin}\n                                variant=\"contained\"\n                                color=\"primary\"\n                            >\n                                GO\n                            </Button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default withRouter(Login);\n","import React, { Component } from 'react';\nimport Schedule from './components/Schedule';\nimport Login from './components/Login';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport \"./App.css\";\n\nclass App extends Component {\n    render() {\n        return (\n            <BrowserRouter>\n                <Switch>\n                    <Route path=\"/schedule/view\" component={() => <Schedule />} />\n                    <Route\n                        path=\"/schedule\"\n                        exact\n                        component={() => <Login />}\n                    />\n                </Switch>\n            </BrowserRouter>\n        );\n    }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('app'));\nserviceWorker.unregister();\n"],"sourceRoot":""}